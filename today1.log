function show(){
console.log("I am a function ");
}
undefined
show;
ƒ show(){
console.log("I am a function ");
}
typeof show;
"function"
typeof show()
VM79:2 I am a function 
"undefined"
var m = show();
VM79:2 I am a function 
undefined
m;
undefined
typeof m;

"undefined"
function calc(){
var add = function(x, y){
return x + y;
}
}
undefined
const MAX = 100;
undefined
MAX ++
VM282:1 Uncaught TypeError: Assignment to constant variable.
    at <anonymous>:1:5
(anonymous) @ VM282:1
MAX = 200
VM293:1 Uncaught TypeError: Assignment to constant variable.
    at <anonymous>:1:5
(anonymous) @ VM293:1
const PI = 3.14;
undefined
VOTE_AGE = 18;
18
age= 12;
12
if(age>=VOTE_AGE){
console.log("U can Vote ");
}
else{
console.log("U Can't Vote ");
}
VM493:5 U Can't Vote 
undefined
const VOTE_AGE = 18;
undefined
VOTE_AGE++
VM536:1 Uncaught TypeError: Assignment to constant variable.
    at <anonymous>:1:9
(anonymous) @ VM536:1
if(age>=VOTE_AGE){
console.log("U can Vote ");
}
else{
console.log("U Can't Vote ");
}
VM540:5 U Can't Vote 
undefined
function calc(){
const add = function(x, y){
return x + y;
}
return add;
}
undefined
var t= calc();
undefined
t;
ƒ (x, y){
return x + y;
}
t(100,200);
300
function calc(){
var a = 100;
var b = 200;
const add = function(x, y){
return x + y + a + b;
}
return add;
}
undefined
t = calc();
ƒ (x, y){
return x + y + a + b;
}
t(1,2);
303
function auto(){
var counter =0;
counter++;
return counter;
}
undefined
auto()
1
auto()
1
auto()
1
var counter =0;
function auto(){

counter++;
return counter;
}
undefined
function init(){
var counter =0;
const auto=function(){

counter++;
return counter;
}
}
undefined
function init(){
var counter =0;
const auto=function(){

counter++;
return counter;
}
return auto;
}
undefined
var m = init();
undefined
m();
1
m();
2
m();
3
m();
4
var m =init();
undefined
m();
1
m();
2
var tt = (function (){
var counter =0;
const auto=function(){

counter++;
return counter;
}
return auto;
})()
undefined
tt;
ƒ (){

counter++;
return counter;
}
tt()
1
tt()
2
tt()
3
function* otp(){
yield 1234;
yield 4444;
yield 5555;
yield 6764;
}
undefined
var e = otp();
undefined
e;
otp {<suspended>}
e.next();
{value: 1234, done: false}
e.next();
{value: 4444, done: false}
e.next();
{value: 5555, done: false}
e.next();
{value: 6764, done: false}
e.next();
{value: undefined, done: true}
function* autoGen(){
var counter = 0;
counter++;
yield counter;
counter++;
yield counter;
counter++;
yield counter;
counter++;
yield counter;
}
undefined
var w = autoGen();
undefined
w.next();
{value: 1, done: false}
w.next();
{value: 2, done: false}
w.next();
{value: 3, done: false}
w.next();
{value: 4, done: false}
w.next();
{value: undefined, done: true}
function* autoGen(){
var counter = 0;
while(true){
counter++;
yield counter;
}
}
undefined
var m = autoGen();
undefined
m.next();
{value: 1, done: false}
m.next();
{value: 2, done: false}
m.next();
{value: 3, done: false}
m.next();
{value: 4, done: false}
m.next();
{value: 5, done: false}
typeof m;
"object"
m.next().value;
6
m.next().value;
7
m.next().value;
8
m.next().value;
9
m.next().value;
10
function test(fn){
console.log("I am in Test ");
fn();
}
undefined
function show(){
console.log(" I am Show ");
}
undefined
test(show);
VM1645:2 I am in Test 
VM1699:2  I am Show 
undefined
test(function(){
console.log(" i am anonymous function")
});
VM1645:2 I am in Test 
VM1802:2  i am anonymous function
undefined
test(()=>console.log("I am Arrow Function"));
VM1645:2 I am in Test 
VM1871:1 I am Arrow Function
undefined
const evenOdd =(num)=>num%2==0?`Even ${num}`:`Odd ${num}`;

undefined
const cube = num=>num**3;
undefined
function loop(fn){
for(let i =1;i<=10; i++){
console.log(fn(i));
}
}
undefined
loop(evenOdd);
VM2113:3 Odd 1
VM2113:3 Even 2
VM2113:3 Odd 3
VM2113:3 Even 4
VM2113:3 Odd 5
VM2113:3 Even 6
VM2113:3 Odd 7
VM2113:3 Even 8
VM2113:3 Odd 9
VM2113:3 Even 10
undefined
loop(cube);
VM2113:3 1
VM2113:3 8
VM2113:3 27
VM2113:3 64
VM2113:3 125
VM2113:3 216
VM2113:3 343
VM2113:3 512
VM2113:3 729
VM2113:3 1000
undefined
